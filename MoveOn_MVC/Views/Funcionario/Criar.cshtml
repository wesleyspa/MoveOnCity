@model MoveOn.Domain.Funcionario   

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/estilo.css")" rel="stylesheet" />

    <title>Novo Funcionário</title>
</head>
<body>
    @Html.Action("Header", "Menu")

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="col-md-offset-2 col-md-8">
            <form>
                <fieldset class="form-group">
                    <legend>Funcionário</legend>

                    <label for="nome">Nome</label>
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome do funcionário", required = "required" } })

                    <label for="dtnascimento">Data de Nascimento</label>
                    @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control", @type = "date", required = "required" } })

                    <label for="cnpj_cpf">CPF</label>
                    @Html.EditorFor(model => model.CPF_CNPJ, new { htmlAttributes = new { @class = "form-control", @placeholder = "CPF do cliente", required = "required" } })

                    <label for="cnh">CNH</label>
                    @Html.EditorFor(model => model.CNH, new { htmlAttributes = new { @class = "form-control", @placeholder = "CNH do cliente", required = "required" } })

                    <label for="estadocivil">Estado Civil</label>
                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        listItems.Add(new SelectListItem
                        {
                            Text = "Solteiro(a)",
                            Value = "Solteiro"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "Casado(a)",
                            Value = "Casado"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "Divorciado(a)",
                            Value = "Divorciado"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "Viúvo(a)",
                            Value = "Viuvo"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "Separado(a)",
                            Value = "Separado"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "Companheiro(a)",
                            Value = "Companheiro"
                        });

                    }
                    @Html.DropDownListFor(model => model.EstadoCivil, listItems, "Solteiro(a)", new { @class = "form-control", required = "required" })

                    <label for="email">Email</label>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email do funcionário", @type = "email", required = "required" } })

                </fieldset>

                <fieldset class="form-group">
                    <legend>Contato</legend>

                    <label for="telefone1">Telefone 1</label>
                    @Html.EditorFor(model => model.Telefone1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Telefone 1", @type = "tel", required = "required" } })

                    <label for="telefone2">Telefone 2</label>
                    @Html.EditorFor(model => model.Telefone2, new { htmlAttributes = new { @class = "form-control", @placeholder = "Telefone 2", @type = "tel", required = "required" } })

                    <label for="senha">Senha</label>
                    @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", @placeholder = "Senha do cliente", @type = "password", required = "required" } })
                    <small class="text-muted">Nunca forneça essa senha a outra pessoa.</small>
                </fieldset>

                <fieldset class="form-group">
                    <legend>Endereço</legend>

                    <label for="logradouro">Logradouro</label>
                    @Html.EditorFor(model => model.FunEndereco.Logradouro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Logradouro", required = "required" } })

                    <label for="_endereco">Endereço</label>
                    @Html.EditorFor(model => model.FunEndereco._Endereco, new { htmlAttributes = new { @class = "form-control", @placeholder = "Endereço", required = "required" } })

                    <label for="numero">Numero</label>
                    @Html.EditorFor(model => model.FunEndereco.Numero, new { htmlAttributes = new { @class = "form-control", @placeholder = "Numero", required = "required" } })

                    <label for="bairro">Bairro</label>
                    @Html.EditorFor(model => model.FunEndereco.Bairro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Bairro", required = "required" } })

                    <label for="complemento">Complemento</label>
                    @Html.EditorFor(model => model.FunEndereco.Complemento, new { htmlAttributes = new { @class = "form-control", @placeholder = "Complemento"} })

                    <label for="cep">CEP</label>
                    @Html.EditorFor(model => model.FunEndereco.CEP, new { htmlAttributes = new { @class = "form-control", @placeholder = "CEP", required = "required" } })

                    <label for="cidade">Cidade</label>
                    @Html.EditorFor(model => model.FunEndereco.Cidade, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cidade", required = "required" } })

                    <label for="estado">Estado</label>
                    @Html.EditorFor(model => model.FunEndereco.Estado, new { htmlAttributes = new { @class = "form-control", @placeholder = "Estado", required = "required" } })

                    <label for="pais">País</label>
                    @Html.EditorFor(model => model.FunEndereco.Pais, new { htmlAttributes = new { @class = "form-control", @placeholder = "País", required = "required" } })
                </fieldset>

                <button type="submit" class="btn btn-primary">Cadastrar</button>
            </form>
        </div>
                        }
</body>
</html>

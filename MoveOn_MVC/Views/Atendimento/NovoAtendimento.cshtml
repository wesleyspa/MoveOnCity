@model MoveOn.Domain.Atendimento

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>MoveON - Atendimento</title>
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/estilo.css")" rel="stylesheet" />

    <title>Novo Atendimento</title>
</head>
<body>
    @Html.Action("Header", "Menu")

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="col-md-offset-2 col-md-8">
            <form>
                <fieldset class="form-group">
                    <legend>Novo Atendimento</legend>

                    @Html.HiddenFor(model => model.ClienteId)

                    <label for="servicoid">Serviço</label>
                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        foreach (var serv in ViewBag.servicos)
                        {
                            listItems.Add(new SelectListItem
                            {
                                Text = serv.Descricao,
                                Value = Convert.ToString(serv.Id)

                            });
                        }
                    }
                    @Html.DropDownListFor(model => model.ServicoId, listItems, "", new { @class = "form-control", required = "required" })

                    <label for="status">Urgência</label>
                    @{
                        List<SelectListItem> listStatus = new List<SelectListItem>();
                        listStatus.Add(new SelectListItem
                        {
                            Text = "Urgente",
                            Value = "Urgente"
                        });
                    }
                    @Html.DropDownListFor(model => model.Status, listStatus, "Normal", new { @class = "form-control", required = "required" })


                </fieldset>

                <fieldset class="form-group">
                    <legend>Localização</legend>

                    <label for="logradouro">Logradouro</label>
                    @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Logradouro", required = "required" } })

                    <label for="_endereco">Endereço</label>
                    @Html.EditorFor(model => model._Endereco, new { htmlAttributes = new { @class = "form-control", @placeholder = "Endereço", required = "required" } })

                    <label for="numero">Numero</label>
                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control", @placeholder = "Numero", required = "required" } })

                    <label for="bairro">Bairro</label>
                    @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Bairro", required = "required" } })

                    <label for="complemento">Complemento</label>
                    @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control", @placeholder = "Complemento"} })

                    @*<label for="cep">CEP</label>
            @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control", @placeholder = "CEP" } })*@

                    <label for="cidade">Cidade</label>
                    @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cidade", required = "required" } })

                    <label for="estado">Estado</label>
                    @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control", @placeholder = "Estado", required = "required" } })

                    <label for="pais">País</label>
                    @Html.EditorFor(model => model.Pais, new { htmlAttributes = new { @class = "form-control", @placeholder = "País", required = "required" } })
                </fieldset>

                <fieldset class="form-group">
                    <legend>Veículo</legend>
                   
                    <label for="veiculoid">Veículo</label>
                    @{
                        List<SelectListItem> listVeic = new List<SelectListItem>();
                        foreach (var veiculo in ViewBag.veiculos)
                        {
                            listVeic.Add(new SelectListItem
                            {
                                Text = veiculo.Marca + " " + veiculo.Modelo + " - " + veiculo.Placa,
                                Value = Convert.ToString(veiculo.Id)
                            });
                        }
                    }
                    @Html.DropDownListFor(model => model.VeiculoCliente, listVeic, "", new { @class = "form-control", required = "required" })
                </fieldset>

                <button type="submit" class="btn btn-primary">Cadastrar</button>
            </form>
        </div>
                        }
</body>
</html>

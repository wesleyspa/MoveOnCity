@model MoveOn.Domain.Atendimento

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>MoveON - Atendimento</title>
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/estilo.css")" rel="stylesheet" />

    <title>Atendimento</title>
</head>
<body>
    @Html.Action("Header", "Menu")

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="col-md-offset-2 col-md-8">
            <form>
                <fieldset class="form-group">
                    <legend>Novo Atendimento</legend>

                    @Html.HiddenFor(model => model.ClienteId)

                    <label for="servicoid">Serviço</label>
                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        foreach (var serv in ViewBag.servicos)
                        {
                            listItems.Add(new SelectListItem
                            {
                                Text = serv.Descricao,
                                Value = Convert.ToString(serv.Id)

                            });
                        }
                    }
                    @Html.DropDownListFor(model => model.ServicoId, listItems, "", new { @class = "form-control" })

                    @Html.HiddenFor(model => model.VeiculoCliente)

                    <label for="status">Urgência</label>
                    @{
                        List<SelectListItem> listStatus = new List<SelectListItem>();                        
                        listStatus.Add(new SelectListItem
                        {
                            Text = "Normal",
                            Value = "Normal"
                        });
                        listStatus.Add(new SelectListItem
                        {
                            Text = "Urgente",
                            Value = "Urgente"
                        });
                    }
                    @Html.DropDownListFor(model => model.Status, listStatus, "", new { @class = "form-control" })


                </fieldset>

                <fieldset class="form-group">
                    <legend>Localização</legend>

                    <label for="logradouro">Logradouro</label>
                    @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Logradouro" } })

                    <label for="_endereco">Endereço</label>
                    @Html.EditorFor(model => model._Endereco, new { htmlAttributes = new { @class = "form-control", @placeholder = "Endereço" } })

                    <label for="numero">Numero</label>
                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control", @placeholder = "Numero" } })

                    <label for="bairro">Bairro</label>
                    @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Bairro" } })

                    <label for="complemento">Complemento</label>
                    @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control", @placeholder = "Complemento" } })

                    <label for="cidade">Cidade</label>
                    @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cidade" } })

                    <label for="estado">Estado</label>
                    @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control", @placeholder = "Estado" } })

                    <label for="pais">País</label>
                    @Html.EditorFor(model => model.Pais, new { htmlAttributes = new { @class = "form-control", @placeholder = "País" } })
                </fieldset>

                <fieldset class="form-group">
                    <legend>Momento</legend>

                    <label for="momInicio">Mom. Inicio</label>
                    @Html.EditorFor(model => model.MomInicio, new { htmlAttributes = new { @class = "form-control"} })

                    <label for="momConclusao">Mom. Conclusão</label>
                    @Html.EditorFor(model => model.MomConclusao, new { htmlAttributes = new { @class = "form-control"} })
                </fieldset>

                <button type="submit" class="btn btn-primary">Salvar</button>
            </form>
        </div>
                        }
</body>
</html>
